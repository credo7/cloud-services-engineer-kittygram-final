name: CI/CD for Kittygram

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: "PEP-8"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          pip install flake8 pytest
          pip install -r backend/requirements.txt

      - name: Lint backend
        run: flake8 backend --max-line-length=120 --exclude migrations,settings.py

  build-and-push-images:
    name: Push Docker images to DockerHub
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t username/kittygram_backend ./backend
          docker push username/kittygram_backend

      - name: Build and push frontend image
        run: |
          docker build -t username/kittygram_frontend ./frontend
          docker push username/kittygram_frontend

      - name: Build and push gateway image
        run: |
          docker build -t username/kittygram_gateway ./nginx
          docker push username/kittygram_gateway

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /kittygram
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker exec kittygram_backend python manage.py collectstatic --noinput
            docker exec kittygram_backend python manage.py migrate

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@v0.4.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ Kittygram Deployment Successful! üéâ
            üë§ Deployed by: ${{ github.actor }}
            üåê Access the app here: http://${{ secrets.SERVER_HOST }}
