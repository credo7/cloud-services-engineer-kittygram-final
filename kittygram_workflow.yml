name: CI/CD for Kittygram

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: "PEP-8"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          pip install flake8 pytest
          pip install -r backend/requirements.txt

      - name: Lint backend
        run: flake8 backend --max-line-length=120 --exclude migrations,settings.py

  build-and-push-images:
    name: Push Docker images to DockerHub
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest backend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

      - name: Build frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

      - name: Build and push gateway image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest nginx
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest


  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e  # Stop on any error

            echo "💻 Navigating to the deployment directory"
            cd ./kittygram

            echo "⬇️ Pulling the latest Docker images"
            docker-compose pull

            echo "🛑 Stopping any running containers"
            docker-compose down

            echo "🚀 Starting the new containers"
            docker-compose up -d

            echo "📦 Collecting static files"
            docker-compose exec -T backend python manage.py collectstatic --noinput

            echo "🔄 Running database migrations"
            docker-compose exec -T backend python manage.py migrate

            echo "✅ Deployment completed successfully!"

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@v1.0.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ Kittygram Deployment Successful! 🎉
            👤 Deployed by: ${{ github.actor }}
            🌐 Access the app here: http://${{ secrets.SERVER_HOST }}
